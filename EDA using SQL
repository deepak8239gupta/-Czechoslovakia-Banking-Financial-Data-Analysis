use bank;
select * from client;
select * from district;
select * from account;
select * from card;
select * from transactions;
select * from `order`;
select * from disposition;
select * from loan;

SELECT * FROM czec_demographic_data_kpi;
SELECT * FROM BANK_ACC_WITH_CLOSING_BALANCE;
SELECT * FROM BANKING_KPI;
SELECT * FROM BANKING_LOAN_KPI;
SELECT * FROM ACC_HAVING_CARD;

SELECT BANK,COUNT(DISTINCT ACCOUNT_ID) FROM BANK_ACC_WITH_CLOSING_BALANCE GROUP BY 1 ORDER BY 2 DESC;
select COUNT(distinct BANK) from BANK_ACC_WITH_CLOSING_BALANCE;

-- Q1. What is the demographic profile of the bank's clients and how does it vary across districts?

create or replace table czec_demographic_data_kpi as(
SELECT D.DISTRICT_NAME,D.AVERAGE_SALARY,
ROUND(AVG(C.AGE),0) AS AVG_AGE,
SUM(CASE WHEN SEX = 'Male' THEN 1 ELSE 0 END) AS MALE_CLIENT ,
SUM(CASE WHEN SEX = 'Female' THEN 1 ELSE 0 END) AS FEMALE_CLIENT ,
COUNT(DISTINCT CLIENT_ID)AS TOTAL_CLIENT,
ROUND((FEMALE_CLIENT/MALE_CLIENT)*100,2) AS MALE_FEMALE_RATIO_PERC
FROM CLIENT C
INNER JOIN DISTRICT D ON C.DISTRICT_ID = D.DISTRICT_CODE
GROUP BY 1,2
ORDER BY 1);

--Q2.How the banks have performed obver the years.Give their detailed analysis month wise?

CREATE OR REPLACE TABLE BANK_ACC_WITH_CLOSING_BALANCE AS(
WITH CTE AS(
SELECT BANK,ACCOUNT_ID,MAX(`DATE`) AS LAST_TXN_DATE
FROM TRANSACTIONS GROUP BY 1,2 ORDER BY 1,2),
 CTE_1 AS(
   SELECT CTE.*,T.BALANCE AS CLOSING_BALANCE
   FROM TRANSACTIONS T
   INNER JOIN CTE ON T.BANK = CTE.BANK AND T.ACCOUNT_ID = CTE.ACCOUNT_ID AND T.`DATE` = CTE.LAST_TXN_DATE
   ORDER BY CTE.BANK,CTE.ACCOUNT_ID) 
SELECT BANK,ACCOUNT_ID,LAST_TXN_DATE,MAX(CLOSING_BALANCE)AS CLOSING_BALANCE FROM CTE_1 GROUP BY 1,2,3 ORDER BY 1,2,3);


CREATE OR REPLACE TABLE BANKING_KPI AS(
SELECT BAWCB.BANK,BAWCB.ACCOUNT_ID,YEAR(BAWCB.LAST_TXN_DATE) AS TXN_YEAR,A.ACCOUNT_TYPE,
COUNT(DISTINCT BAWCB.ACCOUNT_ID) AS TOTAL_ACCOUNTS, 
COUNT(DISTINCT T.TRANS_ID) AS TOTAL_TXNS,
COUNT(CASE WHEN T.`TYPE` = 'Credit' THEN 1 END) AS DEPOSIT_COUNT ,
COUNT(CASE WHEN T.`TYPE` = 'Withdrawal' THEN 1 END) AS WITHDRAWAL_COUNT,
SUM(BAWCB.CLOSING_BALANCE) AS TOTAL_BALANCE_OF_ALL_ACCOUNTS_IN_BANK,
ROUND((DEPOSIT_COUNT / TOTAL_TXNS) * 100,2)  AS DEPOSIT_PERC ,
ROUND((WITHDRAWAL_COUNT / TOTAL_TXNS) * 100,2) AS WITHDRAWAL_PERC ,
ROUND(TOTAL_BALANCE_OF_ALL_ACCOUNTS_IN_BANK / TOTAL_ACCOUNTS,0) AS AVG_BALANCE,
ROUND(TOTAL_TXNS/TOTAL_ACCOUNTS,0) AS TXNS_PER_ACC
FROM TRANSACTIONS AS T
INNER JOIN  BANK_ACC_WITH_CLOSING_BALANCE AS BAWCB ON T.ACCOUNT_ID = BAWCB.ACCOUNT_ID AND T.BANK = BAWCB.BANK
LEFT OUTER JOIN  ACCOUNT AS A ON T.ACCOUNT_ID = A.ACCOUNT_ID
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4);

select BANK,TXN_YEAR,ROUND(SUM(AVG_BALANCE),0) AS TOT_AVG_BALANCE from BANKING_KPI GROUP BY 1,2 ORDER BY 1,2;


CREATE OR REPLACE TABLE BANKING_LOAN_KPI AS(
SELECT T.BANK,ACC_HAVING_LOAN.LOAN_YEAR,ACC_HAVING_LOAN.LOAN_MONTH,ACC_HAVING_LOAN.`STATUS`,
       ACC_HAVING_LOAN.ACCOUNT_ID,A.ACCOUNT_TYPE,SUM(ACC_HAVING_LOAN.AMOUNT) AS LOAN_AMOUNT
FROM TRANSACTIONS T
INNER JOIN (SELECT 
            YEAR(`DATE`) AS LOAN_YEAR,
            MONTH(`DATE`) AS LOAN_MONTH,`STATUS`,ACCOUNT_ID,SUM(AMOUNT) AS AMOUNT
            FROM LOAN GROUP BY 1,2,3,4 ORDER BY 1,2,3,4)AS ACC_HAVING_LOAN
ON T.ACCOUNT_ID=ACC_HAVING_LOAN.ACCOUNT_ID
INNER JOIN ACCOUNT A ON ACC_HAVING_LOAN.ACCOUNT_ID = A.ACCOUNT_ID
GROUP BY 1,2,3,4,5,6
ORDER BY 1,2,3,4,5,6);

SELECT `STATUS`,ACCOUNT_TYPE,COUNT(ACCOUNT_ID) FROM BANKING_LOAN_KPI GROUP BY 1,2 ORDER BY 1,2;


CREATE TABLE ACC_HAVING_CARD AS(
SELECT 
D.ACCOUNT_ID,C.`TYPE`,C.ISSUED
FROM
DISPOSITION D
INNER JOIN CARD C ON D.DISP_ID = C.DISP_ID ORDER BY ISSUED);

SELECT `TYPE`,COUNT(ACCOUNT_ID) FROM ACC_HAVING_CARD GROUP BY 1; 





ALTER TABLE BANKING_LOAN_KPI MODIFY COLUMN BANK VARCHAR(45);
UPDATE BANKING_LOAN_KPI SET BANK = 'Sky Bank' WHERE BANK = 'sky BANK';
SELECT count(distinct account_id) FROM BANK_ACC_WITH_CLOSING_BALANCE;


select * FROM BANKING_LOAN_KPI;
SELECT ACCOUNT_ID,COUNT(DISTINCT BANK) FROM BANKING_LOAN_KPI GROUP  BY 1; 


select account_id ,sum(closing_balance),count(closing_balance)from BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 2 DESC LIMIT 50;

CREATE TABLE TOP_ACC_WITHIN_BANK AS(
  with cte as(
  SELECT bank,max(closing_balance) as balance FROM BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 1)
select 
c.bank,b.account_id,c.balance
from cte C
inner join BANK_ACC_WITH_CLOSING_BALANCE B on c.balance = b.closing_balance and c.bank = b.bank) ;

SELECT * FROM TOP_ACC_WITHIN_BANK;
DROP TABLE TOP_ACC_WITHIN_BANK;

create table top_acc_holders as (
SELECT 
B.ACCOUNT_ID,B.SUM,B.COUNT,A.ACCOUNT_TYPE
FROM ACCOUNT A
INNER JOIN
(select account_id ,round(sum(closing_balance),0) AS SUM,count(closing_balance) AS COUNT from BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 2 DESC) B
ON A.ACCOUNT_ID = B.ACCOUNT_ID
--WHERE A.ACCOUNT_TYPE = 'NRI account'
 order by 2 DESC);
 
 
SELECT * FROM top_acc_holders ORDER BY SUM DESC LIMIT 50;
SELECT * FROM TOP_ACC_WITHIN_BANK ORDER BY BALANCE DESC;

CREATE TABLE ACC_DEPOSITING_THEIR_MAX_BALANCE_PARTICULAR_BANK AS(
  with cte as(
  SELECT ACCOUNT_ID,max(closing_balance) as balance FROM BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 1 DESC)
select 
--c.ACCOUNT_ID,b.BANK,c.balance
C.ACCOUNT_ID,ROUND(C.BALANCE,0) AS BALANCE,B.BANK
from cte C
inner join BANK_ACC_WITH_CLOSING_BALANCE B on c.balance = b.closing_balance and c.ACCOUNT_ID = b.ACCOUNT_ID
ORDER BY C.BALANCE DESC);


SELECT * FROM ACC_DEPOSITING_THEIR_MAX_BALANCE_PARTICULAR_BANK;
SELECT * FROM BANK_ACC_WITH_CLOSING_BALANCE;
SELECT BANK,COUNT(BANK) FROM ACC_DEPOSITING_THEIR_MAX_BALANCE_PARTICULAR_BANK GROUP BY 1 ORDER BY 2 DESC;



SELECT BANK,CLOSING_BALANCE FROM BANK_ACC_WITH_CLOSING_BALANCE WHERE ACCOUNT_ID = 176 ORDER BY 2 DESC;


SELECT ACCOUNT_TYPE FROM BANKING_KPI WHERE ACCOUNT_ID = 96;----NRI account,Savings account
SELECT COUNT(DISTINCT account_ID)FROM BANK_ACC_WITH_CLOSING_BALANCE;


CREATE TABLE TOP_ACC_WITHIN_BANK_WITH_CARD_LOAN_STATUS AS(
SELECT 
A.*,B.`TYPE`,C.LOAN_AMOUNT,C.`STATUS`
FROM TOP_ACC_WITHIN_BANK A
LEFT OUTER JOIN ACC_HAVING_CARD B ON A.ACCOUNT_ID = B.ACCOUNT_ID
LEFT OUTER JOIN BANKING_LOAN_KPI C ON A.BANK = C.BANK AND A.ACCOUNT_ID = C.ACCOUNT_ID);

SELECT * FROM TOP_ACC_WITHIN_BANK_WITH_CARD_LOAN_STATUS;


SELECT BANK,SUM(TOTAL_BALANCE_OF_ALL_ACCOUNTS_IN_BANK) FROM BANKING_KPI GROUP BY 1ORDER BY 2 DESC;


SELECT `STATUS`,ACCOUNT_TYPE,COUNT(ACCOUNT_TYPE) FROM BANKING_LOAN_KPI where bank='nanital BANK' GROUP BY 1,2;




SELECT BANK,COUNT(DISTINCT ACCOUNT_ID) FROM BANKING_LOAN_KPI GROUP BY 1 ORDER BY 2 DESC;
